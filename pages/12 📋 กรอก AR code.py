import streamlit as st
import pandas as pd
import os
import re

SPEND_LOOKUP_FILE = "table/unique_spend_code.csv"
AR_FILE = "table/ar_code.xlsx"

@st.cache_data
def load_spend_lookup():
    if os.path.exists(SPEND_LOOKUP_FILE):
        return pd.read_csv(SPEND_LOOKUP_FILE, dtype=str).fillna("")
    return pd.DataFrame(columns=["‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", "‡∏´‡∏°‡∏ß‡∏î‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢", "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£", "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"])


def load_ar_data():
    if os.path.exists(AR_FILE):
        return pd.read_excel(AR_FILE, dtype=str).fillna("")
    return pd.DataFrame(columns=["‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢", "ar_code", "‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"])

def save_ar_data(new_rows):
    old = load_ar_data()
    combined = pd.concat([old, new_rows], ignore_index=True)
    combined.to_excel(AR_FILE, index=False)


def reset_form():
    # ‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡∏ó‡∏∏‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°
    st.session_state["ar_sets"] = [0]
    st.session_state.pop("project_code", None)
    st.session_state.pop("new_rows", None)
    st.session_state["reset_project_code"] = True
    for i in range(50):
        st.session_state.pop(f"ar_code_{i}", None)
        st.session_state.pop(f"spend_codes_{i}", None)
    st.session_state["just_reset"] = True



# --- UI ---
st.set_page_config(page_title="‡πÄ‡∏û‡∏¥‡πà‡∏° AR Code ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡∏∏‡∏î", layout="wide")
st.title("üìå ‡πÄ‡∏û‡∏¥‡πà‡∏° AR Code ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢")

# üîî ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ flag reset ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
if st.session_state.get("just_reset", False):
    if "__tmp_new_rows__" in st.session_state:
        st.session_state["new_rows"] = st.session_state["__tmp_new_rows__"]
        del st.session_state["__tmp_new_rows__"]
    st.success("üîÑ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ñ‡∏π‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    del st.session_state["just_reset"]

if "saved_successfully" in st.session_state:
    st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å AR Codes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ {st.session_state['saved_successfully']} ‡πÅ‡∏•‡πâ‡∏ß")
    del st.session_state["saved_successfully"]

spend_df = load_spend_lookup()

# --- ‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏Å ---
if "reset_project_code" in st.session_state and st.session_state["reset_project_code"]:
    default_code = ""
    del st.session_state["reset_project_code"]
else:
    default_code = st.session_state.get("project_code", "")


pattern_project_code = r"^E\d{4}_\d{3}$"
project_code = st.text_input("‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢ (‡πÄ‡∏ä‡πà‡∏ô E2568_001)", value=default_code, key="project_code")
if not re.match(pattern_project_code, st.session_state.project_code):
    st.warning("‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö EXXXX_XXX (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: E2568_001)")


# --- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏£‡πå‡∏° AR code ---
if "ar_sets" not in st.session_state:
    st.session_state.ar_sets = [0]

for i in st.session_state.ar_sets:
    with st.container():
        st.subheader(f"üîÅ AR Code ‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà {i+1}")
        ar_code = st.text_input("üè∑Ô∏è AR Code (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ARCXXX ‡πÄ‡∏ä‡πà‡∏ô ARC001)", key=f"ar_code_{i}")
        selected_spend = st.multiselect(
            "üßæ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢",
            spend_df["‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"].unique().tolist(),
            key=f"spend_codes_{i}",
            default=[]  # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
        )

        if selected_spend:
            st.markdown("üìÑ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢")
            detail_rows = spend_df[spend_df["‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"].isin(selected_spend)]
            st.dataframe(detail_rows, use_container_width=True)

        if i != 0:
            if st.button(f"‚ûñ ‡∏•‡∏ö AR Code ‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà {i+1}", key=f"remove_{i}"):
                st.session_state.ar_sets.remove(i)
                st.session_state.pop(f"ar_code_{i}", None)
                st.session_state.pop(f"spend_codes_{i}", None)
                st.rerun()

# --- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∏‡∏î‡πÉ‡∏´‡∏°‡πà ---
if st.button("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏° AR Code ‡πÉ‡∏´‡∏°‡πà"):
    if st.session_state.ar_sets:
        new_idx = max(st.session_state.ar_sets) + 1
    else:
        new_idx = 1
    st.session_state.ar_sets.append(new_idx)
    st.rerun()

# --- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ---
if st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å AR Codes ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"):
    if not project_code.strip():
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢")
    else:
        all_rows = []
        for i in st.session_state.ar_sets:
            ar_code = st.session_state.get(f"ar_code_{i}", "").strip()
            spend_codes = st.session_state.get(f"spend_codes_{i}", [])
            if ar_code and spend_codes:
                for code in spend_codes:
                    all_rows.append({
                        "‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢": project_code.strip(),
                        "ar_code": ar_code,
                        "‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢": code
                    })

        if all_rows:
            df = pd.DataFrame(all_rows)
            save_ar_data(df)

            # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
            st.session_state["saved_successfully"] = project_code.strip()
            st.session_state["__tmp_new_rows__"] = all_rows
            reset_form()
            st.rerun()
            # st.cache_data.clear()
        else:
            st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å AR code ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏ä‡∏∏‡∏î")

# --- ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ---
if "new_rows" in st.session_state:
    new_rows_df = pd.DataFrame(st.session_state["new_rows"])
    if not new_rows_df.empty:
        st.subheader("üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î")
        st.dataframe(new_rows_df.astype(str), use_container_width=True)

for key in list(st.session_state.keys()):
    del st.session_state[key]
